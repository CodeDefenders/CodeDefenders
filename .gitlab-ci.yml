include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml

image: maven:3-jdk-8

stages:
  - build
  - test

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SAST_EXCLUDED_PATHS: **/target
  SAST_DISABLE_DIND: "true"  
  SAST_DEFAULT_ANALYZERS: "spotbugs, secrets"
  DS_DISABLE_DIND: "true"
  DS_DEFAULT_ANALYZERS: "gemnasium-maven"

cache:
  paths:
    - .m2/repository/
    - target/
    - ./config.properties


spotbugs-sast:
  script:
    - touch config.properties
    - /analyzer run

gemnasium-maven-dependency_scanning:
  script:
    - touch config.properties
    - /analyzer run


build:
  stage: build
  script:
    - touch config.properties
    - mvn --no-transfer-progress clean compile

test:
  stage: test
  script:
    - apt update && apt-get -y install libncurses5
    - touch config.properties
    - mvn --no-transfer-progress test checkstyle:checkstyle
    - |
      file="";
      first=1;
      output="checkstyle-report.json"
      path="$(pwd)";
      echo "[" > "$output";
      tail -n +3 target/checkstyle-result.xml | while read p; do
        if echo "$p" | grep -q "<file name.*" ; then
          file=$(expr "$p" : '<file name=\"\(.*\)\".*' | sed 's@'"$path"'@@g' );
          echo "$file";
        fi
        if echo "$p" | grep -q "<error.*" ; then
          line="$(expr "$p" : '.*line=\"\([0-9]*\)\".*')";
          message="$(expr "$p" : '.*message=\"\(.*\)\" source.*' | sed -e 's/&apos;/`/g' -e 's/&lt;/</g' -e 's/&gt;/>/g' -e 's/&quot;/\\\"/g' -e 's/&amp;/\&/g')"
          checksum=$(echo "$file $line $message" | sha1sum | awk '{print $1}')
          if [ "$first" == 1 ] ; then
            echo "{ \"description\": \"$message\", \"fingerprint\": \"$checksum\", \"location\": { \"path\": \"$file\", \"lines\": { \"begin\": \"$line\" }}}" >> "$output";
            first=0;
          else
            echo ",{ \"description\": \"$message\", \"fingerprint\": \"$checksum\", \"location\": { \"path\": \"$file\", \"lines\": { \"begin\": \"$line\" }}}" >> "$output"
          fi
        fi
      done ;
      echo "]" >> "$output"
    - cat target/site/jacoco-ut/index.html | grep -o '<tfoot>.*</tfoot>'
  artifacts:
    paths:
      - target/surefire-reports/
      - target/site/jacoco-ut/
      - checkstyle-report.json
    reports:
      codequality:
        - checkstyle-report.json
      junit:
        - target/surefire-reports/TEST-*.xml
