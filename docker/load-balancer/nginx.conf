worker_rlimit_nofile 8192;
events {
    worker_connections 1024;
}

http {
    access_log off;

    upstream localhost {
        # Sticky sessions are availble only in the expensive ngingx plus version.
        # we can use ip_hash to link users IP to frontend in a fixed way. This does not ensure perfect
        # loadbalancing but at least some load distribution and session consistency
        #ip_hash;
        # https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/src/master/
        sticky;

        # These are references to our backend containers, facilitated by
        # Compose, as defined in docker-compose.yml
	# Alternatively, see https://stackoverflow.com/questions/50203408/docker-compose-scale-x-nginx-conf-configuration
	# https://github.com/jwilder/nginx-proxy   
        server frontend_1:8080  max_fails=0 fail_timeout=1s;
        server frontend_2:8080  max_fails=0 fail_timeout=1s;
        server frontend_3:8080  max_fails=0 fail_timeout=1s;
        server frontend_4:8080  max_fails=0 fail_timeout=1s;
        server frontend_5:8080  max_fails=0 fail_timeout=1s;
        server frontend_6:8080  max_fails=0 fail_timeout=1s;
        server frontend_7:8080  max_fails=0 fail_timeout=1s;
        server frontend_8:8080  max_fails=0 fail_timeout=1s;
    }
    server {
    listen 80;
    server_name localhost;
    location / {
       proxy_pass http://localhost;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP          $remote_addr;
       proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto  $scheme;
       proxy_set_header X-Forwarded-Host   $host:$server_port;
       proxy_set_header X-Forwarded-Server $host;
       proxy_set_header X-Forwarded-Port   $server_port;
       proxy_next_upstream error timeout;
       proxy_next_upstream_timeout 2;
       proxy_next_upstream_tries 1;
    }
  }
}
