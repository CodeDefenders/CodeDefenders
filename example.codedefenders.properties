###
### Example Code Defenders configuration file.
### All uncommented properties are required to be set manually.
### All commented properties specify their default value if any.
###

## The URL under which users access the application. You almost always want to set this, to accommodate reverse proxy's
## or similar.
#app.url=

## Code Defenders data directory, here are all source files stored
data.dir=
## CodeDefenders library directory, here the java libraries for test execution are stored.
## Can be an absolute path or a path relative to data.dir.
## NOTE: installation-pom.xml (currently) assumes this to be 'lib/'
#lib.dir=lib/
## Ant Home on local machine
#ant.home=/usr/share/ant
## JAVA_HOME to use for running Ant jobs. If unset the default system JVM is used
#ant.java.home=
## Database connection data
#db.host=127.0.0.1
#db.port=3306
#db.name=codedefenders
## Database access data
#db.username=codedefenders
#db.password=
## Database connection details
#db.connections.max = 25
#db.connections.timeout = 5000

## Cluster Setting
#cluster.mode=false
## Java Home on cluster
#cluster.java.home=
## SLURM reservation name if any
#cluster.reservation.name=
## SLURM Job timeout
#cluster.timeout=
## Run all compilations and the testing of the original version on the local machine, if cluster.mode is true
#force.local.execution=true

## Parallelize Ant task execution
#parallelize=true
## The number of parallel ant task executions
#parallelize.count=2
## The number of parallel Killmap Test-vs-Mutant executions. If unset the number of available processors is used.
#parallelize.killmap.count=

## Skip tests on mutants that are not covered
#mutant.coverage=true

## Block the attackers if there are pending equivalence duels
#block.attacker=true

## The role in the tomcat user database that provides admin privileges for the users with the usernames listed there
#auth.admin.role=codedefenders-admin

## Enables exposing a '/metrics' endpoint that provides Prometheus/OpenMetrics compatible metrics.
#metrics=false
## Enables exposing a '/monitoring' endpoint that serves JavaMelody statistics
#javamelody=false
