<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>codedefenders</groupId>
	<artifactId>codedefenders-installation</artifactId>
	<version>1.0-SNAPSHOT</version>

	<properties>
		<config.properties>config.properties</config.properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<powermock.version>1.6.1</powermock.version>
		<jacoco.version>0.8.6</jacoco.version>
		<hamcrest.version>1.3</hamcrest.version>
		<mockito.version>1.10.19</mockito.version>
		<junit4.version>4.13.1</junit4.version>
		<junit5.version>5.7.0</junit5.version>
		<junit5.platform.version>1.7.0</junit5.platform.version>
		<opentest4j.version>1.2.0</opentest4j.version>
		<truth.version>1.1.2</truth.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.ant</artifactId>
			<version>${jacoco.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit4.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit5.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit5.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>${junit5.platform.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>${junit5.platform.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit5.platform.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit5.version}</version>
		</dependency>

		<dependency>
			<groupId>org.opentest4j</groupId>
			<artifactId>opentest4j</artifactId>
			<version>${opentest4j.version}</version>
		</dependency>

		<dependency>
  			<groupId>com.google.truth</groupId>
			<artifactId>truth</artifactId>
			<version>${truth.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.truth.extensions</groupId>
			<artifactId>truth-java8-extension</artifactId>
			<version>${truth.version}</version>
		</dependency>

		<dependency>
  			<groupId>com.google.guava</groupId>
  			<artifactId>guava</artifactId>
  			<!-- <version>29.0-jre</version> -->
			<version>29.0-android</version>
		</dependency>
	</dependencies>

	<build>
		<filters>
			<!-- This enables to read properties from this file and automagically
				put their values in other files. For example, we use that to update: context.xml -->
			<filter>${config.properties}</filter>
		</filters>

		<plugins>
			<!-- Fails if the ${config.properties} file does not exists -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M1</version>
				<executions>
					<execution>
						<id>enforce-files-exist</id>
						<phase>validate</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireFilesExist>
									<files>
										<file>${config.properties}</file>
									</files>
								</requireFilesExist>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Reads all the properties from ${config.properties} -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${config.properties}</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Print the properties. Maybe is enough to attach this to deploy instead -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>Displaying properties value</echo>
								<echo>[data.dir] ${data.dir}</echo>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Remove old dependencies from ${data.dir} -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>clean</id>
						<phase>package</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<filesets>
									<directory>${data.dir}/lib</directory>
									<includes>
										<include>*.jar</include>
									</includes>
								</filesets>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Download and copy dependencies in the "right place", that is ${data.dir} -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<!-- <id>copy-dependencies</id> <phase>package</phase> <goals> <goal>copy-dependencies</goal>
							</goals> -->
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${data.dir}/lib</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>junit</groupId>
									<artifactId>junit</artifactId>
									<version>${junit4.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.hamcrest</groupId>
									<artifactId>hamcrest-all</artifactId>
									<version>${hamcrest.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.mockito</groupId>
									<artifactId>mockito-all</artifactId>
									<version>${mockito.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.jacoco</groupId>
									<artifactId>org.jacoco.agent</artifactId>
									<version>${jacoco.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.jacoco</groupId>
									<artifactId>org.jacoco.ant</artifactId>
									<version>${jacoco.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.jacoco</groupId>
									<artifactId>org.jacoco.core</artifactId>
									<version>${jacoco.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.jacoco</groupId>
									<artifactId>org.jacoco.report</artifactId>
									<version>${jacoco.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.junit.jupiter</groupId>
									<artifactId>junit-jupiter-api</artifactId>
									<version>${junit5.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.junit.jupiter</groupId>
									<artifactId>junit-jupiter-engine</artifactId>
									<version>${junit5.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.junit.platform</groupId>
									<artifactId>junit-platform-commons</artifactId>
									<version>${junit5.platform.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.junit.platform</groupId>
									<artifactId>junit-platform-engine</artifactId>
									<version>${junit5.platform.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.junit.platform</groupId>
									<artifactId>junit-platform-launcher</artifactId>
									<version>${junit5.platform.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.junit.vintage</groupId>
									<artifactId>junit-vintage-engine</artifactId>
									<version>${junit5.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.opentest4j</groupId>
									<artifactId>opentest4j</artifactId>
									<version>${opentest4j.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.truth</groupId>
  									<artifactId>truth</artifactId>
  									<version>${truth.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.truth.extensions</groupId>
									<artifactId>truth-java8-extension</artifactId>
  									<version>${truth.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.guava</groupId>
  									<artifactId>guava</artifactId>
  									<version>29.0-android</version>
									<type>jar</type>
									<overWrite>false</overWrite>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
